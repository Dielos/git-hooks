#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

patterns=()
patterns+=("^(fix|feat): \[..*\] ..*$")
patterns+=("^chore: ..*")
patterns+=("^Merge branch ")
HEADER=`head -n1 $1`

for i in "${patterns[@]}"
do
  echo "pattern: $i"
  if [[ "$HEADER" =~ $i ]]; then
    echo "Should work"
    exit 0
  fi
done

echo 'Bad commit message'
echo '--> For feature and fix, commit message needs the following format:'
echo '    feature: [<Jira number>] <description>'
echo '    fix: [<Jira number>] <description>'
echo '    e.g. "fix: [OSAPI-1234] Beautiful fix description"'
echo '--> For chore, commit message needs the following format'
echo '    chore: <description>'
echo '    e.g. "chore: pod install"'
exit 1


